{"version":3,"sources":["components/search-bar/search-bar.component.jsx","components/item-card/item-card.component.jsx","components/music-list/music-list.component.jsx","App.js","index.js"],"names":["SearchBar","props","state","search","handleChange","bind","handleSubmit","event","this","setState","target","value","console","log","window","innerWidth","replaced","replace","fetch","method","headers","token","then","response","json","output","undefined","tracks","updateItems","items","className","placeholder","type","onChange","style","display","length","React","Component","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","toFixed","ItemCard","backgroundImage","album","images","url","name","artists","map","i","duration_ms","href","external_urls","spotify","rel","icon","faPlay","MusicList","track","id","key","App","newItems","searchedItems","btoa","clientId","body","access_token","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b0c3e5f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './search-bar.style.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {search: ''};\r\n    \r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n      handleChange(event) {\r\n        this.setState({search: event.target.value},()=>{        \r\n          this.handleSubmit();\r\n        });\r\n        console.log(window.innerWidth)\r\n\r\n      }\r\n    \r\n      handleSubmit() {\r\n        var str = this.state.search\r\n        var replaced = str.replace(' ', '+');\r\n            fetch(`https://api.spotify.com/v1/search?q=${replaced}&type=track`, {\r\n              method: 'GET',\r\n              headers: { \r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json',\r\n                  'Authorization' : 'Bearer ' + this.props.token}\r\n          }).then(response => response.json()).then(output => (output.tracks!==undefined) ? this.props.updateItems(output.tracks.items):this.props.updateItems([]));\r\n\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n            <div className=\"search-bar\">\r\n                <input className=\"input\" placeholder=\"Search you Favourite Music\" type=\"text\" value={this.state.search} onChange={this.handleChange} />\r\n                <h2 className=\"title\" style={{display : (this.state.search.length>0 && window.innerWidth<=920)? 'none': 'block'}}>Search In from the wide range of collections.</h2>\r\n            </div>\r\n\r\n        );\r\n      }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport './item-card.style.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst millisToMinutesAndSeconds = (millis) => {\r\n    var minutes = Math.floor(millis / 60000);\r\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\r\n    return `${minutes}:${(seconds < 10 ? \"0\" : \"\")}${seconds}`;\r\n}\r\n\r\nconst ItemCard = (props)=>(\r\n    <div className=\"item-card\">\r\n        <div className=\"item-image\" style={{backgroundImage:`url(${props.album.images[0].url})`}}></div>\r\n        <div className=\"item-details\">\r\n            <div className=\"item-name\">{props.name}</div>\r\n            <div className=\"item-artist\">Music By : {props.artists.map(i => i.name+\", \")}</div>\r\n            <div className=\"item-duration\">Duration : {millisToMinutesAndSeconds(props.duration_ms)}</div>\r\n        </div>\r\n        <a href={props.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\" className=\"play-button\"><FontAwesomeIcon className=\"play-icon\"  icon={faPlay} /></a>\r\n        \r\n    </div>\r\n)\r\n\r\nexport default ItemCard;","import React from 'react';\r\nimport './music-list.style.scss';\r\nimport ItemCard from '../item-card/item-card.component';\r\n\r\nconst MusicList = ({items}) => (\r\n    <div className=\"list\">\r\n        {\r\n            items.map((track,id) => <ItemCard {...track}  key={id}/>)\r\n        }  \r\n    </div>\r\n)\r\n\r\nexport default MusicList;","import React from 'react';\nimport SearchBar from './components/search-bar/search-bar.component';\nimport MusicList from './components/music-list/music-list.component';\nimport './App.css';\n\n\nclass App extends React.Component {\n\n  constructor(){\n    super();\n    this.state = {\n      token:'',\n      searchedItems:[]\n    }\n  }\n\n  updateItems = (newItems) => {\n      this.setState({searchedItems:newItems},()=>{console.log(this.state)})\n  }\n\n  componentDidMount(){\n    const clientId = 'a0405fea39d946258aa3f328bc0e3a71';\n    const clientSecret = '0c68d04ade504af69422c9d52ae4480a';\n\n\n    fetch('https://accounts.spotify.com/api/token', {\n        method: 'POST',\n        headers: {\n            'Content-Type' : 'application/x-www-form-urlencoded', \n            'Authorization' : 'Basic ' + btoa(clientId + ':' + clientSecret)\n        },\n        body: 'grant_type=client_credentials'\n    }).then(response => response.json()).then(output => this.setState({token:output.access_token}))\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"main-body\">\n          <SearchBar token={this.state.token} updateItems={this.updateItems}/>\n          <MusicList items={this.state.searchedItems}/>\n        </div>\n        \n        <a href=\"https://www.linkedin.com/in/abhishekm2106/\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"credits\">Abhishek Mohanty</a>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}